%define _version @@VERSION@@
%define _tar_name @@TAR_NAME@@
%define _release_extra @@RELEASE@@
# official builds set this to 1, we use 0 for internal/dev-test
%{!?_release: %global _release 0}

# add on official "dot" if we have a patched version
%global release_patch %{?_release_extra:.%{_release_extra}}

Summary:        C Library and Tools for KMIP
Name:           libkmip
Version:        %{_version}
Release:        %{_release}%{release_patch}%{?dist}
License:        Apache or BSD
Group:          Development/Libraries
URL:            https://github.com/versity/libkmip
Source0:        %{_tar_name}.tar.gz
BuildRoot:      %{_tmppath}/%{name}-%{version}-root-%(%{__id_u} -n)
Buildrequires:  openssl-devel
Buildrequires:  tar
Buildrequires:  make
Buildrequires:  gcc

Requires:      openssl

%define debug_package %{nil}

%description
KMIP C client libraries and headers for Versity product development

%package devel
Summary: Headers and documentation for libkmip
Group: Development/Libraries
Requires: %{name} = %{version}-%{release}

%description devel
This library provides an API for using a KMIP server for encrypting
and decrypting archived files.

%prep
%setup -q -n %{_tar_name}

%build
BUILD=$RPM_BUILD_ROOT/build make exported

%install
BUILD=$RPM_BUILD_ROOT/build DESTDIR=$RPM_BUILD_ROOT/usr LIBDIR=$RPM_BUILD_ROOT/%{_libdir} make install

# need 0755 for find-provides and other bits to recognize it
chmod 0755 $RPM_BUILD_ROOT/%{_libdir}/libkmip.so.*
rm -rf $RPM_BUILD_ROOT/build

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(-,root,root,-)
%{_libdir}/libkmip.so*

%files devel
%{_bindir}/kmip-get
%{_libdir}/libkmip.a
%{_includedir}/kmip.h
%{_includedir}/kmip_bio.h
%{_includedir}/kmip_memset.h

%changelog
* Thu Apr 16 2020 Jeff Andre <jandre@versity.com> - 0.2.0
- Initial build.
